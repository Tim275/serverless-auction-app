{"version":3,"file":"_aws-sdk_token-providers_dist-es_loadSsoOidc_js.js","mappings":"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ACA;AACA;AACA;AACO,sCAAsC,6EAAe;AAC5D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oCAAoC,6EAAe;AAC1D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO,gCAAgC,6EAAe;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO,0CAA0C,6EAAe;AAChE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4CAA4C,6EAAe;AAClE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4CAA4C,6EAAe;AAClE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,6CAA6C,6EAAe;AACnE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,8BAA8B,cAAc,mEAAgB,EAAE;AAC9D,8BAA8B,cAAc,mEAAgB,EAAE;AAC9D,CAAC;AACM;AACP;AACA,6BAA6B,aAAa,mEAAgB,EAAE;AAC5D,8BAA8B,cAAc,mEAAgB,EAAE;AAC9D,yBAAyB,SAAS,mEAAgB,EAAE;AACpD,CAAC;AACM;AACP;AACA,8BAA8B,cAAc,mEAAgB,EAAE;AAC9D,2BAA2B,WAAW,mEAAgB,EAAE;AACxD,8BAA8B,cAAc,mEAAgB,EAAE;AAC9D,CAAC;AACM;AACP;AACA,6BAA6B,aAAa,mEAAgB,EAAE;AAC5D,8BAA8B,cAAc,mEAAgB,EAAE;AAC9D,yBAAyB,SAAS,mEAAgB,EAAE;AACpD,CAAC;AACM;AACP;AACA,8BAA8B,cAAc,mEAAgB,EAAE;AAC9D,CAAC;AACM;AACP;AACA,8BAA8B,cAAc,mEAAgB,EAAE;AAC9D,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACxNmD;AAC0P;AAC0E;AACzR;AACxF;AACP,cAAc,4DAAE;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAK;AAC3B,KAAK;AACL;AACA;AACA;AACO;AACP,cAAc,4DAAE;AAChB;AACA;AACA;AACA;AACA,kBAAkB,0DAAG;AACrB;AACA,KAAK;AACL;AACA,0BAA0B,2DAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAK;AAC3B;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP,cAAc,4DAAE;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAI;AAC9B;AACA;AACA,uBAAuB,4DAAK;AAC5B,KAAK;AACL;AACA;AACA;AACO;AACP,cAAc,4DAAE;AAChB;AACA;AACA;AACA;AACA;AACA,0BAA0B,2DAAI;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA,qBAAqB,0DAAG;AACxB;AACA,KAAK;AACL,iBAAiB,oEAAe,CAAC,mEAAc;AAC/C,gBAAgB,2DAAI;AACpB,qBAAqB,+DAAc;AACnC,mBAAmB,8DAAa;AAChC,iBAAiB,+DAAc;AAC/B,sBAAsB,+DAAc;AACpC,mBAAmB,+DAAc;AACjC,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA,qBAAqB,0DAAG;AACxB;AACA,KAAK;AACL,iBAAiB,oEAAe,CAAC,mEAAc;AAC/C,gBAAgB,2DAAI;AACpB,qBAAqB,+DAAc;AACnC,mBAAmB,8DAAa;AAChC,iBAAiB,+DAAc;AAC/B,yBAAyB,+DAAc;AACvC,sBAAsB,+DAAc;AACpC,eAAe,wDAAK;AACpB,mBAAmB,+DAAc;AACjC,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA,qBAAqB,0DAAG;AACxB;AACA,KAAK;AACL,iBAAiB,oEAAe,CAAC,mEAAc;AAC/C,gBAAgB,2DAAI;AACpB,+BAA+B,+DAAc;AAC7C,kBAAkB,+DAAc;AAChC,0BAA0B,6DAAY;AACtC,sBAAsB,+DAAc;AACpC,+BAA+B,6DAAY;AAC3C,uBAAuB,+DAAc;AACrC,KAAK;AACL;AACA;AACA;AACO;AACP;AACA;AACA;AACA,qBAAqB,0DAAG;AACxB;AACA,KAAK;AACL,iBAAiB,oEAAe,CAAC,mEAAc;AAC/C,gBAAgB,2DAAI;AACpB,oBAAoB,+DAAc;AAClC,mBAAmB,8DAAa;AAChC,kBAAkB,8DAAa;AAC/B,kBAAkB,+DAAc;AAChC,yBAAyB,+DAAc;AACvC,iCAAiC,+DAAc;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0BAA0B,wEAAiB,CAAC,oFAAe;AAC3D;AACA,qBAAqB,0DAAG,GAAG;AAC3B;AACA,gBAAgB,2DAAI;AACpB,eAAe,+DAAc;AAC7B,2BAA2B,+DAAc;AACzC,KAAK;AACL;AACA,0BAA0B,mEAAqB;AAC/C;AACA;AACA,KAAK;AACL,WAAW,+EAA0B;AACrC;AACA;AACA,qBAAqB,0DAAG,GAAG;AAC3B;AACA,gBAAgB,2DAAI;AACpB,eAAe,+DAAc;AAC7B,2BAA2B,+DAAc;AACzC,KAAK;AACL;AACA,0BAA0B,2EAA6B;AACvD;AACA;AACA,KAAK;AACL,WAAW,+EAA0B;AACrC;AACA;AACA,qBAAqB,0DAAG,GAAG;AAC3B;AACA,gBAAgB,2DAAI;AACpB,eAAe,+DAAc;AAC7B,2BAA2B,+DAAc;AACzC,KAAK;AACL;AACA,0BAA0B,mEAAqB;AAC/C;AACA;AACA,KAAK;AACL,WAAW,+EAA0B;AACrC;AACA;AACA,qBAAqB,0DAAG,GAAG;AAC3B;AACA,gBAAgB,2DAAI;AA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AA8B;AACjD,kFAAkF,kEAAkB;AACpG,aAAa;AACb,kCAAkC,mDAAI;AACtC,oDAAoD,sEAAe;AACnE,8DAA8D,wEAAc,CAAC,+FAA0C;AACvH,oDAAoD,wEAAc,CAAC,0FAAqC;AACxG;AACA;;;;;;;;;;;;;;;;;;;;AC3CmD;AACL;AACa;AACN;AACiB;AAC/D;AACP;AACA;AACA,gDAAgD,2DAAU;AAC1D,gDAAgD,yDAAQ;AACxD;AACA,sDAAsD,+EAAuB;AAC7E;AACA,sCAAsC,6DAAU;AAChD;AACA,wCAAwC,wDAAQ;AAChD,4CAA4C,uDAAQ;AACpD,4CAA4C,qDAAM;AAClD;AACA;;;;;;;;;;;;;;;;;;ACnB8H;AAChB;AACR;AACtG;AACO;AACP;AACA,qBAAqB,mGAAkC;AACvD,qBAAqB,uFAAgC;AACrD,qBAAqB,2FAAoC;AACzD;AACA;AACA;AACA;AACA,WAAW,uGAAsC;AACjD,WAAW,kFAA2B;AACtC,WAAW,sFAA+B;AAC1C;AACA;;;;;;;;;;;;;;;;;;;ACjBoD;AACD;AACS;AAC5D;AACO;AACP;AACA;AACA,0DAA0D;AAC1D;AACA,SAAS;AACT,YAAY,qFAAqF;AACjG;AACA;AACA,iBAAiB,0EAAiB;AAClC;AACA;AACA,uBAAuB,0EAAiB;AACxC;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,6DAAW;AACrE;AACA,SAAS;AACT;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,qCAAqC,0EAAiB;AACtD,8BAA8B;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,6DAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,0DAA0D;AAC1D;AACA,SAAS;AACT,YAAY,qFAAqF;AACjG;AACA;AACA,iBAAiB,0EAAiB;AAClC;AACA;AACA,iBAAiB,0EAAiB,KAAK,6DAAW;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAO;AACtB;AACA;AACA,WAAW,0EAAiB;AAC5B;;;;;;;;;;;;;;;;;;;;;AC1GkE;AACE;AACc;AAC3E;AACP,SAAS,8DAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iFAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wCAAwC,+FAA2B;AACnE;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,+FAA2B;AAC/D;AACA;AACA;AACA,oCAAoC,+DAAY;AACzC;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,KAAK;AACL,CAAC;AACM;;;;;;;;;;;;;;;;;;;;;;ACtDgC;AACH;;;;;;;;;;;;;;;ACD7B;;;;;;;;;;;;;;;;ACAyC;AACzC;AACP;AACA,QAAQ,6DAAa;AACrB;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACP8D;AACvD,iEAAiE,2EAAoB;;;;;;;;;;;;;;;;;;ACDf;AAChC","sources":["webpack:///../../@aws-sdk/client-sso-oidc/dist-es/SSOOIDCClient.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/commands/CreateTokenCommand.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/credentialDefaultProvider.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/endpoint/EndpointParameters.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/endpoint/endpointResolver.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/endpoint/ruleset.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/models/SSOOIDCServiceException.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/models/models_0.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/protocols/Aws_restJson1.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.shared.js","webpack:///../../@aws-sdk/client-sso-oidc/dist-es/runtimeExtensions.js","webpack:///../../@aws-sdk/middleware-signing/dist-es/awsAuthConfiguration.js","webpack:///../../@aws-sdk/middleware-signing/dist-es/awsAuthMiddleware.js","webpack:///../../@aws-sdk/middleware-signing/dist-es/index.js","webpack:///../../@aws-sdk/middleware-signing/dist-es/utils/getSkewCorrectedDate.js","webpack:///../../@aws-sdk/middleware-signing/dist-es/utils/getUpdatedSystemClockOffset.js","webpack:///../../@aws-sdk/middleware-signing/dist-es/utils/isClockSkewed.js","webpack:///../../@aws-sdk/token-providers/dist-es/loadSsoOidc.js"],"sourcesContent":["import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class SSOOIDCClient extends __Client {\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveAwsAuthConfig(_config_5);\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { CreateTokenRequestFilterSensitiveLog, CreateTokenResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_CreateTokenCommand, se_CreateTokenCommand } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class CreateTokenCommand extends $Command\n    .classBuilder()\n    .ep({\n    ...commonParams,\n})\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSSOOIDCService\", \"CreateToken\", {})\n    .n(\"SSOOIDCClient\", \"CreateTokenCommand\")\n    .f(CreateTokenRequestFilterSensitiveLog, CreateTokenResponseFilterSensitiveLog)\n    .ser(se_CreateTokenCommand)\n    .de(de_CreateTokenCommand)\n    .build() {\n}\n","export const defaultProvider = ((input) => {\n    return () => import(\"@aws-sdk/credential-provider-node\").then(({ defaultProvider }) => defaultProvider(input)());\n});\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"sso-oauth\",\n    };\n};\nexport const commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import { resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","const u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = { [u]: false, \"type\": \"String\" }, j = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Endpoint\" }, l = { [v]: c, [w]: [{ [x]: \"UseFIPS\" }, true] }, m = { [v]: c, [w]: [{ [x]: \"UseDualStack\" }, true] }, n = {}, o = { [v]: h, [w]: [{ [x]: g }, \"supportsFIPS\"] }, p = { [x]: g }, q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, \"supportsDualStack\"] }] }, r = [l], s = [m], t = [{ [x]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: \"stringEquals\", [w]: [{ [v]: h, [w]: [p, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://oidc.{Region}.amazonaws.com\", properties: n, headers: n }, type: e }, { endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexport const ruleSet = _data;\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class SSOOIDCServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOOIDCServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { SSOOIDCServiceException as __BaseException } from \"./SSOOIDCServiceException\";\nexport class AccessDeniedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AccessDeniedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AccessDeniedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AccessDeniedException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class AuthorizationPendingException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AuthorizationPendingException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AuthorizationPendingException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AuthorizationPendingException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InternalServerException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InternalServerException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalServerException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidGrantException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidGrantException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidGrantException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidGrantException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidScopeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidScopeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidScopeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidScopeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class SlowDownException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"SlowDownException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"SlowDownException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, SlowDownException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnauthorizedClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnsupportedGrantTypeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedGrantTypeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedGrantTypeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedGrantTypeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidRequestRegionException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestRegionException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestRegionException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestRegionException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n        this.endpoint = opts.endpoint;\n        this.region = opts.region;\n    }\n}\nexport class InvalidClientMetadataException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientMetadataException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidClientMetadataException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidClientMetadataException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport const CreateTokenRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.clientSecret && { clientSecret: SENSITIVE_STRING }),\n    ...(obj.refreshToken && { refreshToken: SENSITIVE_STRING }),\n});\nexport const CreateTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n    ...(obj.refreshToken && { refreshToken: SENSITIVE_STRING }),\n    ...(obj.idToken && { idToken: SENSITIVE_STRING }),\n});\nexport const CreateTokenWithIAMRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.refreshToken && { refreshToken: SENSITIVE_STRING }),\n    ...(obj.assertion && { assertion: SENSITIVE_STRING }),\n    ...(obj.subjectToken && { subjectToken: SENSITIVE_STRING }),\n});\nexport const CreateTokenWithIAMResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n    ...(obj.refreshToken && { refreshToken: SENSITIVE_STRING }),\n    ...(obj.idToken && { idToken: SENSITIVE_STRING }),\n});\nexport const RegisterClientResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.clientSecret && { clientSecret: SENSITIVE_STRING }),\n});\nexport const StartDeviceAuthorizationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.clientSecret && { clientSecret: SENSITIVE_STRING }),\n});\n","import { requestBuilder as rb } from \"@smithy/core\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { AccessDeniedException, AuthorizationPendingException, ExpiredTokenException, InternalServerException, InvalidClientException, InvalidClientMetadataException, InvalidGrantException, InvalidRequestException, InvalidRequestRegionException, InvalidScopeException, SlowDownException, UnauthorizedClientException, UnsupportedGrantTypeException, } from \"../models/models_0\";\nimport { SSOOIDCServiceException as __BaseException } from \"../models/SSOOIDCServiceException\";\nexport const se_CreateTokenCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/token\");\n    let body;\n    body = JSON.stringify(take(input, {\n        clientId: [],\n        clientSecret: [],\n        code: [],\n        deviceCode: [],\n        grantType: [],\n        redirectUri: [],\n        refreshToken: [],\n        scope: (_) => _json(_),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_CreateTokenWithIAMCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/token\");\n    const query = map({\n        [_ai]: [, \"t\"],\n    });\n    let body;\n    body = JSON.stringify(take(input, {\n        assertion: [],\n        clientId: [],\n        code: [],\n        grantType: [],\n        redirectUri: [],\n        refreshToken: [],\n        requestedTokenType: [],\n        scope: (_) => _json(_),\n        subjectToken: [],\n        subjectTokenType: [],\n    }));\n    b.m(\"POST\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_RegisterClientCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/client/register\");\n    let body;\n    body = JSON.stringify(take(input, {\n        clientName: [],\n        clientType: [],\n        scopes: (_) => _json(_),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_StartDeviceAuthorizationCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/device_authorization\");\n    let body;\n    body = JSON.stringify(take(input, {\n        clientId: [],\n        clientSecret: [],\n        startUrl: [],\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const de_CreateTokenCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        accessToken: __expectString,\n        expiresIn: __expectInt32,\n        idToken: __expectString,\n        refreshToken: __expectString,\n        tokenType: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_CreateTokenWithIAMCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        accessToken: __expectString,\n        expiresIn: __expectInt32,\n        idToken: __expectString,\n        issuedTokenType: __expectString,\n        refreshToken: __expectString,\n        scope: _json,\n        tokenType: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_RegisterClientCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        authorizationEndpoint: __expectString,\n        clientId: __expectString,\n        clientIdIssuedAt: __expectLong,\n        clientSecret: __expectString,\n        clientSecretExpiresAt: __expectLong,\n        tokenEndpoint: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_StartDeviceAuthorizationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        deviceCode: __expectString,\n        expiresIn: __expectInt32,\n        interval: __expectInt32,\n        userCode: __expectString,\n        verificationUri: __expectString,\n        verificationUriComplete: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ssooidc#AccessDeniedException\":\n            throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n        case \"AuthorizationPendingException\":\n        case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n            throw await de_AuthorizationPendingExceptionRes(parsedOutput, context);\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case \"InvalidGrantException\":\n        case \"com.amazonaws.ssooidc#InvalidGrantException\":\n            throw await de_InvalidGrantExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        case \"UnsupportedGrantTypeException\":\n        case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n            throw await de_UnsupportedGrantTypeExceptionRes(parsedOutput, context);\n        case \"InvalidRequestRegionException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestRegionException\":\n            throw await de_InvalidRequestRegionExceptionRes(parsedOutput, context);\n        case \"InvalidClientMetadataException\":\n        case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\n            throw await de_InvalidClientMetadataExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_AccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_AuthorizationPendingExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AuthorizationPendingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InternalServerExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidClientExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidClientMetadataExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientMetadataException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidGrantExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidGrantException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidRequestRegionExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        endpoint: __expectString,\n        error: __expectString,\n        error_description: __expectString,\n        region: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestRegionException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidScopeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidScopeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SlowDownExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new SlowDownException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnauthorizedClientExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnsupportedGrantTypeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnsupportedGrantTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst _ai = \"aws_iam\";\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","import packageInfo from \"../package.json\";\nimport { defaultProvider as credentialDefaultProvider } from \"./credentialDefaultProvider\";\nimport { emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credentialDefaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n","import { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2019-06-10\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSO OIDC\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n    };\n};\n","import { memoize } from \"@smithy/property-provider\";\nimport { SignatureV4 } from \"@smithy/signature-v4\";\nimport { normalizeProvider } from \"@smithy/util-middleware\";\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nexport const resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(Object.assign({}, input, {\n            parentClientConfig: input,\n        }));\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else if (input.regionInfoProvider) {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: input.signingName || input.defaultSigningName,\n                signingRegion: await normalizeProvider(input.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            input.signingRegion = input.signingRegion || signingRegion;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexport const resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(Object.assign({}, input, {\n            parentClientConfig: input,\n        }));\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n","import { HttpRequest, HttpResponse } from \"@smithy/protocol-http\";\nimport { getSkewCorrectedDate } from \"./utils/getSkewCorrectedDate\";\nimport { getUpdatedSystemClockOffset } from \"./utils/getUpdatedSystemClockOffset\";\nexport const awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const multiRegionOverride = authScheme?.name === \"sigv4a\" ? authScheme?.signingRegionSet?.join(\",\") : undefined;\n    const signer = await options.signer(authScheme);\n    let signedRequest;\n    const signingOptions = {\n        signingDate: getSkewCorrectedDate(options.systemClockOffset),\n        signingRegion: multiRegionOverride || context[\"signing_region\"],\n        signingService: context[\"signing_service\"],\n    };\n    if (context.s3ExpressIdentity) {\n        const sigV4MultiRegion = signer;\n        signedRequest = await sigV4MultiRegion.signWithCredentials(args.request, context.s3ExpressIdentity, signingOptions);\n        if (signedRequest.headers[\"X-Amz-Security-Token\"] || signedRequest.headers[\"x-amz-security-token\"]) {\n            throw new Error(\"X-Amz-Security-Token must not be set for s3-express requests.\");\n        }\n    }\n    else {\n        signedRequest = await signer.sign(args.request, signingOptions);\n    }\n    const output = await next({\n        ...args,\n        request: signedRequest,\n    }).catch((error) => {\n        const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nconst getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\nexport const awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nexport const getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n    },\n});\nexport const getSigV4AuthPlugin = getAwsAuthPlugin;\n","export * from \"./awsAuthConfiguration\";\nexport * from \"./awsAuthMiddleware\";\n","export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n","import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n","import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n","import { CreateTokenCommand, SSOOIDCClient } from \"@aws-sdk/client-sso-oidc\";\nexport { CreateTokenCommand, SSOOIDCClient };\n"],"names":[],"sourceRoot":""}